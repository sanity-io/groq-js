name: CI & Release

# Workflow name based on selected inputs. Fallback to default Github naming when expression evaluates to empty string
run-name: >-
  ${{
    inputs.release && 'Test âž¤ Publish to NPM' ||
    'Test'
  }}

on:
  # Build on pushes to release branches
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Publish new release'
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    # We test on all of the maintained versions: https://nodejs.org/en/about/releases/
    strategy:
      matrix:
        node-version: ['14.x', '16.x', '18.x', '19.x']

    steps:
      - uses: actions/checkout@dc323e67f16fb5f7663d20ff7941f27f5809e9b6 # v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@f1f314fca9dfce2769ece7d933488f076716723e # v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run-script prettify-check
      - run: npm run test:generate
      - run: npm test
        env:
          CI: true
      - run: npm run build

  release:
    name: Semantic release
    needs: build
    # only run if opt-in during workflow_dispatch
    if: github.event.inputs.release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          # Need to fetch entire commit history to
          # analyze every commit since last release
          fetch-depth: 0
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
        # Branches that will release new versions are defined in .releaserc.json
      - run: npx semantic-release
        # Don't allow interrupting the release step if the job is cancelled, as it can lead to an inconsistent state
        # e.g. git tags were pushed but it exited before `npm publish`
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      # Re-run semantic release with rich logs if it failed to publish for easier debugging
      - run: npx semantic-release --dry-run --debug
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
